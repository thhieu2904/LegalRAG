import React from "react";
import { VoiceInput } from "../chat/VoiceInput";
import { Input } from "../ui/input";
import { Button } from "../ui/button";

export function VoiceInputDemo() {
  const [message, setMessage] = React.useState("");
  const [isListening, setIsListening] = React.useState(false);
  const [history, setHistory] = React.useState<string[]>([]);

  const handleTranscriptChange = (newTranscript: string) => {
    setMessage(newTranscript);
    console.log("Transcript change:", newTranscript);
  };

  const handleFinalTranscript = (newTranscript: string) => {
    setMessage(newTranscript);
    console.log("Final transcript:", newTranscript);
  };

  const handleStart = () => {
    setIsListening(true);
    setMessage(""); // X√≥a n·ªôi dung c≈© khi b·∫Øt ƒë·∫ßu ghi √¢m
    console.log("Voice input started");
  };

  const handleStop = () => {
    setIsListening(false);
    console.log("Voice input stopped");
  };

  const handleSend = () => {
    if (message.trim()) {
      setHistory((prev) => [...prev, message.trim()]);
      setMessage("");
    }
  };

  const clearAll = () => {
    setTranscript("");
    setFinalTranscript("");
    setIsListening(false);
  };

  return (
    <div className="max-w-4xl mx-auto p-8 space-y-8">
      <div className="text-center">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">
          Demo Voice Input - Speech to Text
        </h1>
        <p className="text-gray-600">
          Nh·∫•n v√†o n√∫t microphone ƒë·ªÉ b·∫Øt ƒë·∫ßu n√≥i. H·ªá th·ªëng s·∫Ω nh·∫≠n d·∫°ng gi·ªçng
          n√≥i c·ªßa b·∫°n th√†nh vƒÉn b·∫£n.
        </p>
      </div>

      <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 shadow-lg">
        <div className="flex items-center justify-center gap-6 mb-8">
          <VoiceInput
            onTranscriptChange={handleTranscriptChange}
            onFinalTranscript={handleFinalTranscript}
            onStart={handleStart}
            onStop={handleStop}
            className="scale-110"
          />
          <button
            onClick={clearAll}
            className="px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors"
          >
            X√≥a t·∫•t c·∫£
          </button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Real-time Transcript */}
          <div>
            <h3 className="text-lg font-semibold text-gray-800 mb-3">
              üìù VƒÉn b·∫£n theo th·ªùi gian th·ª±c
            </h3>
            <TranscriptDisplay
              transcript={transcript}
              isListening={isListening}
            />
          </div>

          {/* Final Transcript */}
          <div>
            <h3 className="text-lg font-semibold text-gray-800 mb-3">
              ‚úÖ K·∫øt qu·∫£ cu·ªëi c√πng
            </h3>
            <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 min-h-[100px]">
              {finalTranscript ? (
                <div className="text-gray-800 leading-relaxed">
                  {finalTranscript}
                </div>
              ) : (
                <div className="text-gray-400 italic">
                  K·∫øt qu·∫£ nh·∫≠n d·∫°ng cu·ªëi c√πng s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y...
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Status Information */}
        <div className="mt-6 p-4 bg-blue-50 rounded-lg">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
            <div>
              <span className="font-medium text-blue-700">Tr·∫°ng th√°i:</span>
              <span
                className={`ml-2 px-2 py-1 rounded ${
                  isListening
                    ? "bg-green-100 text-green-700"
                    : "bg-gray-100 text-gray-600"
                }`}
              >
                {isListening ? "üé§ ƒêang l·∫Øng nghe" : "‚è∏Ô∏è D·ª´ng"}
              </span>
            </div>
            <div>
              <span className="font-medium text-blue-700">T·ª´ hi·ªán t·∫°i:</span>
              <span className="ml-2 text-gray-700">
                {transcript.split(" ").filter((w) => w.trim()).length}
              </span>
            </div>
            <div>
              <span className="font-medium text-blue-700">T·ªïng t·ª´:</span>
              <span className="ml-2 text-gray-700">
                {finalTranscript.split(" ").filter((w) => w.trim()).length}
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* Instructions */}
      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-yellow-800 mb-3">
          üîß H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
        </h3>
        <ul className="space-y-2 text-yellow-700">
          <li>
            ‚Ä¢ <strong>B∆∞·ªõc 1:</strong> Nh·∫•n v√†o n√∫t microphone ƒë·ªÉ b·∫Øt ƒë·∫ßu
          </li>
          <li>
            ‚Ä¢ <strong>B∆∞·ªõc 2:</strong> N√≥i r√µ r√†ng v√† t·ª± nhi√™n
          </li>
          <li>
            ‚Ä¢ <strong>B∆∞·ªõc 3:</strong> Nh·∫•n l·∫°i n√∫t microphone ƒë·ªÉ d·ª´ng ho·∫∑c ƒë·ª£i
            3 gi√¢y
          </li>
          <li>
            ‚Ä¢ <strong>L∆∞u √Ω:</strong> ƒê·∫£m b·∫£o cho ph√©p tr√¨nh duy·ªát truy c·∫≠p
            microphone
          </li>
        </ul>
      </div>
    </div>
  );
}
