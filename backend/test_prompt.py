#!/usr/bin/env python3
"""
Test script ƒë·ªÉ ki·ªÉm tra prompt m·ªõi
"""

import sys
import os
import json
from pathlib import Path

# Add backend to path
backend_dir = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(backend_dir))

from app.services.language_model import LLMService

def test_new_prompt():
    print("üß™ Testing New Prompt for LLM-based Question Generation")
    print("=" * 60)
    
    # Initialize LLM
    llm = LLMService()
    
    # Test data
    document_title = "ƒêƒÉng k√Ω khai sinh"
    document_summary = "ƒê·ªëi t∆∞·ª£ng: C√° nh√¢n. C∆° quan th·ª±c hi·ªán: UBND c·∫•p ph∆∞·ªùng/x√£. Th·ªùi gian x·ª≠ l√Ω: Ngay khi nh·∫≠n ƒë·ªß h·ªì s∆° h·ª£p l·ªá. L·ªá ph√≠: Mi·ªÖn ph√≠"
    
    # New approach - let LLM respond naturally, then extract
    user_query = f"""T·∫°o c√¢u h·ªèi cho th·ªß t·ª•c: {document_title}

M√¥ t·∫£ th·ªß t·ª•c: {document_summary}

H√£y t·∫°o:
1. M·ªôt c√¢u h·ªèi ch√≠nh
2. Ba c√¢u h·ªèi bi·∫øn th·ªÉ kh√°c

Tr·∫£ l·ªùi ng·∫Øn g·ªçn, m·ªói c√¢u h·ªèi m·ªôt d√≤ng:"""

    # Simple system prompt
    system_prompt = "B·∫°n t·∫°o c√¢u h·ªèi v·ªÅ th·ªß t·ª•c ph√°p lu·∫≠t. Tr·∫£ l·ªùi ng·∫Øn g·ªçn."
    
    print("üìù USER QUERY:")
    print(user_query)
    print("\nüß† SYSTEM PROMPT:")
    print(system_prompt)
    print("\nü§ñ LLM RESPONSE:")
    
    # Call LLM
    response = llm.generate_response(
        user_query=user_query,
        system_prompt=system_prompt,
        max_tokens=300,
        temperature=0.1
    )
    
    response_text = response.get('response', '')
    print(response_text)
    print("\n" + "=" * 60)
    
    # Try to extract JSON with new logic
    import re
    
    # Strategy: Extract questions from text response
    lines = [line.strip() for line in response_text.split('\n') if line.strip()]
    questions = []
    
    # L·ªçc ra nh·ªØng d√≤ng ch·ª©a c√¢u h·ªèi (k·∫øt th√∫c b·∫±ng d·∫•u ?)
    for line in lines:
        # Remove numbering v√† bullet points
        cleaned_line = re.sub(r'^[\d\-\*\+\.\)]\s*', '', line).strip()
        if cleaned_line.endswith('?') and len(cleaned_line) > 5:
            questions.append(cleaned_line)
    
    if len(questions) >= 1:
        main_question = questions[0]
        question_variants = questions[1:] if len(questions) > 1 else []
        
        # T·∫°o JSON object
        result = {
            "main_question": main_question,
            "question_variants": question_variants
        }
        print("‚úÖ QUESTIONS EXTRACTED SUCCESSFULLY:")
        print(json.dumps(result, indent=2, ensure_ascii=False))
    else:
        print("‚ùå NO QUESTIONS FOUND IN RESPONSE")

if __name__ == "__main__":
    test_new_prompt()
